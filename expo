import React, { useState } from 'react';
import { StyleSheet, Text, View, Button, Alert } from 'react-native';
import * as DocumentPicker from 'expo-document-picker';

export default function App() {
  const [file, setFile] = useState(null);
  const [uploading, setUploading] = useState(false);

  const pickFile = async () => {
    let result = await DocumentPicker.getDocumentAsync({
      type: '*/*', // To pick any file type. Adjust as needed.
      copyToCacheDirectory: true,
    });

    if (result.type === 'success') {
      setFile(result);
      uploadFile(result);
    }
  };

  const uploadFile = async (file) => {
    setUploading(true);
    try {
      const formData = new FormData();
      formData.append('file', {
        uri: file.uri,
        name: file.name,
        type: file.mimeType || 'application/octet-stream',
      });

      const response = await fetch('https://your-upload-url.com/upload', { // Replace with your upload URL
        method: 'POST',
        body: formData,
        headers: {
          'Content-Type': 'multipart/form-data',
        },
      });

      const result = await response.json();
      if (response.ok) {
        Alert.alert('Upload Successful', `File uploaded successfully: ${result.url}`); // Assuming the server returns the URL of the uploaded file
      } else {
        Alert.alert('Upload Failed', result.error || 'Something went wrong');
      }
    } catch (error) {
      Alert.alert('Upload Error', error.message);
    } finally {
      setUploading(false);
    }
  };

  return (
    <View style={styles.container}>
      <Button title="Pick a file" onPress={pickFile} />
      {file && <Text style={styles.fileInfo}>{file.name}</Text>}
      {uploading && <Text>Uploading...</Text>}
    </View>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
  },
  fileInfo: {
    marginTop: 20,
    fontSize: 16,
    color: 'black',
  },
});
